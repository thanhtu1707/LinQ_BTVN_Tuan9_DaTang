#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BLL_DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBGHIDANH")]
	public partial class QLGDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGhiDanh(GhiDanh instance);
    partial void UpdateGhiDanh(GhiDanh instance);
    partial void DeleteGhiDanh(GhiDanh instance);
    partial void InsertMonHoc(MonHoc instance);
    partial void UpdateMonHoc(MonHoc instance);
    partial void DeleteMonHoc(MonHoc instance);
    #endregion
		
		public QLGDDataContext() : 
				base(global::BLL_DAL.Properties.Settings.Default.DBGHIDANHConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public QLGDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLGDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLGDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLGDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<GhiDanh> GhiDanhs
		{
			get
			{
				return this.GetTable<GhiDanh>();
			}
		}
		
		public System.Data.Linq.Table<MonHoc> MonHocs
		{
			get
			{
				return this.GetTable<MonHoc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GhiDanh")]
	public partial class GhiDanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maGhiDanh;
		
		private string _hoVaTen;
		
		private System.Nullable<System.DateTime> _ngaySinh;
		
		private string _gioiTinh;
		
		private string _dienThoai;
		
		private string _email;
		
		private string _maMonHoc;
		
		private System.Nullable<int> _buoiHoc;
		
		private System.Nullable<bool> _thiXepLoai;
		
		private EntityRef<MonHoc> _MonHoc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaGhiDanhChanging(string value);
    partial void OnmaGhiDanhChanged();
    partial void OnhoVaTenChanging(string value);
    partial void OnhoVaTenChanged();
    partial void OnngaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnngaySinhChanged();
    partial void OngioiTinhChanging(string value);
    partial void OngioiTinhChanged();
    partial void OndienThoaiChanging(string value);
    partial void OndienThoaiChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnmaMonHocChanging(string value);
    partial void OnmaMonHocChanged();
    partial void OnbuoiHocChanging(System.Nullable<int> value);
    partial void OnbuoiHocChanged();
    partial void OnthiXepLoaiChanging(System.Nullable<bool> value);
    partial void OnthiXepLoaiChanged();
    #endregion
		
		public GhiDanh()
		{
			this._MonHoc = default(EntityRef<MonHoc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maGhiDanh", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maGhiDanh
		{
			get
			{
				return this._maGhiDanh;
			}
			set
			{
				if ((this._maGhiDanh != value))
				{
					this.OnmaGhiDanhChanging(value);
					this.SendPropertyChanging();
					this._maGhiDanh = value;
					this.SendPropertyChanged("maGhiDanh");
					this.OnmaGhiDanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoVaTen", DbType="NVarChar(100)")]
		public string hoVaTen
		{
			get
			{
				return this._hoVaTen;
			}
			set
			{
				if ((this._hoVaTen != value))
				{
					this.OnhoVaTenChanging(value);
					this.SendPropertyChanging();
					this._hoVaTen = value;
					this.SendPropertyChanged("hoVaTen");
					this.OnhoVaTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ngaySinh", DbType="Date")]
		public System.Nullable<System.DateTime> ngaySinh
		{
			get
			{
				return this._ngaySinh;
			}
			set
			{
				if ((this._ngaySinh != value))
				{
					this.OnngaySinhChanging(value);
					this.SendPropertyChanging();
					this._ngaySinh = value;
					this.SendPropertyChanged("ngaySinh");
					this.OnngaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gioiTinh", DbType="NVarChar(5)")]
		public string gioiTinh
		{
			get
			{
				return this._gioiTinh;
			}
			set
			{
				if ((this._gioiTinh != value))
				{
					this.OngioiTinhChanging(value);
					this.SendPropertyChanging();
					this._gioiTinh = value;
					this.SendPropertyChanged("gioiTinh");
					this.OngioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dienThoai", DbType="Char(10)")]
		public string dienThoai
		{
			get
			{
				return this._dienThoai;
			}
			set
			{
				if ((this._dienThoai != value))
				{
					this.OndienThoaiChanging(value);
					this.SendPropertyChanging();
					this._dienThoai = value;
					this.SendPropertyChanged("dienThoai");
					this.OndienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMonHoc", DbType="NVarChar(100)")]
		public string maMonHoc
		{
			get
			{
				return this._maMonHoc;
			}
			set
			{
				if ((this._maMonHoc != value))
				{
					if (this._MonHoc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaMonHocChanging(value);
					this.SendPropertyChanging();
					this._maMonHoc = value;
					this.SendPropertyChanged("maMonHoc");
					this.OnmaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buoiHoc", DbType="Int")]
		public System.Nullable<int> buoiHoc
		{
			get
			{
				return this._buoiHoc;
			}
			set
			{
				if ((this._buoiHoc != value))
				{
					this.OnbuoiHocChanging(value);
					this.SendPropertyChanging();
					this._buoiHoc = value;
					this.SendPropertyChanged("buoiHoc");
					this.OnbuoiHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thiXepLoai", DbType="Bit")]
		public System.Nullable<bool> thiXepLoai
		{
			get
			{
				return this._thiXepLoai;
			}
			set
			{
				if ((this._thiXepLoai != value))
				{
					this.OnthiXepLoaiChanging(value);
					this.SendPropertyChanging();
					this._thiXepLoai = value;
					this.SendPropertyChanged("thiXepLoai");
					this.OnthiXepLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_GhiDanh", Storage="_MonHoc", ThisKey="maMonHoc", OtherKey="maMonHoc", IsForeignKey=true)]
		public MonHoc MonHoc
		{
			get
			{
				return this._MonHoc.Entity;
			}
			set
			{
				MonHoc previousValue = this._MonHoc.Entity;
				if (((previousValue != value) 
							|| (this._MonHoc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MonHoc.Entity = null;
						previousValue.GhiDanhs.Remove(this);
					}
					this._MonHoc.Entity = value;
					if ((value != null))
					{
						value.GhiDanhs.Add(this);
						this._maMonHoc = value.maMonHoc;
					}
					else
					{
						this._maMonHoc = default(string);
					}
					this.SendPropertyChanged("MonHoc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MonHoc")]
	public partial class MonHoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _maMonHoc;
		
		private string _tenMonHoc;
		
		private EntitySet<GhiDanh> _GhiDanhs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaMonHocChanging(string value);
    partial void OnmaMonHocChanged();
    partial void OntenMonHocChanging(string value);
    partial void OntenMonHocChanged();
    #endregion
		
		public MonHoc()
		{
			this._GhiDanhs = new EntitySet<GhiDanh>(new Action<GhiDanh>(this.attach_GhiDanhs), new Action<GhiDanh>(this.detach_GhiDanhs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maMonHoc", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string maMonHoc
		{
			get
			{
				return this._maMonHoc;
			}
			set
			{
				if ((this._maMonHoc != value))
				{
					this.OnmaMonHocChanging(value);
					this.SendPropertyChanging();
					this._maMonHoc = value;
					this.SendPropertyChanged("maMonHoc");
					this.OnmaMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenMonHoc", DbType="NVarChar(100)")]
		public string tenMonHoc
		{
			get
			{
				return this._tenMonHoc;
			}
			set
			{
				if ((this._tenMonHoc != value))
				{
					this.OntenMonHocChanging(value);
					this.SendPropertyChanging();
					this._tenMonHoc = value;
					this.SendPropertyChanged("tenMonHoc");
					this.OntenMonHocChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MonHoc_GhiDanh", Storage="_GhiDanhs", ThisKey="maMonHoc", OtherKey="maMonHoc")]
		public EntitySet<GhiDanh> GhiDanhs
		{
			get
			{
				return this._GhiDanhs;
			}
			set
			{
				this._GhiDanhs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GhiDanhs(GhiDanh entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = this;
		}
		
		private void detach_GhiDanhs(GhiDanh entity)
		{
			this.SendPropertyChanging();
			entity.MonHoc = null;
		}
	}
}
#pragma warning restore 1591
